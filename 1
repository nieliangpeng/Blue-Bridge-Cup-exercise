问题描述
Fibonacci数列的递推公式为：Fn=Fn-1+Fn-2，其中F1=F2=1。

当n比较大时，Fn也非常大，现在我们想知道，Fn除以10007的余数是多少。

输入格式
输入包含一个整数n。
输出格式
输出一行，包含一个整数，表示Fn除以10007的余数。
说明：在本题中，答案是要求Fn除以10007的余数，因此我们只要能算出这个余数即可，而不需要先计算出Fn的准确值，再将计算的结果除以10007取余数，  直接计算余数    往往比先算出原数再取余简单。

样例输入
10
样例输出
55
样例输入
22
样例输出
7704
数据规模与约定
1 <= n <= 1,000,000。

锦囊1
使用数组来保存F序列，只保存除10007的余数。
锦囊2
先令F[1]=1, F[2]=1，然后用F[i]=(F[i-1]+F[i-2])%10007来计算F[i]。


 #include <stdlib.h>

 #include <stdio.h>

 #define MOD 10007

 #define MAXN 1000001

int n, i, F[MAXN];//写在main函数里面不行是因为1000001超出了数组可以具备的最大的值；

 int main()

 {

 scanf("%d", &n);

 F[1] = 1;

 F[2] = 1;

 for (i = 3; i <= n; ++i)

 F[i] = (F[i-1] + F[i-2]) % MOD;

 printf("%d\n", F[n]);

 return 0;

 }


问题描述
给定圆的半径r，求圆的面积。
输入格式
输入包含一个整数r，表示圆的半径。
输出格式
输出一行，包含一个实数，四舍五入保留小数点后7位，表示圆的面积。
说明：在本题中，输入是一个整数，但是输出是一个实数。

对于实数输出的问题，请一定看清楚实数输出的要求，比如本题中要求保留小数点后7位，则你的程序必须严格的输出7位小数，输出过多或者过少的小数位数都是不行的，都会被认为错误。

实数输出的问题如果没有特别说明，舍入都是按四舍五入进行。

样例输入
4
样例输出
50.2654825
数据规模与约定
1 <= r <= 10000。
提示
本题对精度要求较高，请注意π的值应该取较精确的值。你可以使用常量来表示π，比如PI=3.14159265358979323，也可以使用数学公式来求π，比如PI=atan(1.0)*4。

锦囊1
使用面积公式计算结果。
锦囊2
利用公式：面积=π*r2，使用double类型保存结果，在输出的时候注意保存正确的小数位数。

#include<stdio.h>
#include<math.h>
int main(void){
	int r;
	double PI=atan(1.0)*4;
	scanf("%d",&r);
	if(r<1&&r>10000){
	
	   printf("重新输入r的值,1<=r<=10000"); 
	   scanf("%d",&r);
}
	printf("%.7lf",PI*r*r);
	return 0;
} 



锦囊1
使用求和公式计算结果，使用64位整型(C++:long long, C:long long, Java:long)来保存结果和进行中间运算。
锦囊2
利用公式1+2+3+...+n=(1+n)*n/2来计算。注意这里的乘法运算时需要在64位整数下进行。
问题描述
求1+2+3+...+n的值。
输入格式
输入包括一个整数n。
输出格式
输出一行，包括一个整数，表示1+2+3+...+n的值。
样例输入
4
样例输出
10
样例输入
100
说明：有一些试题会给出多组样例输入输出以帮助你更好的做题。

一般在提交之前所有这些样例都需要测试通过才行，但这不代表这几组样例数据都正确了你的程序就是完全正确的，潜在的错误可能仍然导致你的得分较低。

样例输出
5050
数据规模与约定
1 <= n <= 1,000,000,000。
说明：请注意这里的数据规模。

本题直接的想法是直接使用一个循环来累加，然而，当数据规模很大时，这种“暴力”的方法往往会导致超时。此时你需要想想其他方法。你可以试一试，如果使用1000000000作为你的程序的输入，你的程序是不是能在规定的上面规定的时限内运行出来。

本题另一个要值得注意的地方是答案的大小不在你的语言默认的整型(int)范围内，如果使用整型来保存结果，会导致结果错误。

如果你使用C++或C语言而且准备使用printf输出结果，则你的格式字符串应该写成%I64d以输出long long类型的整数。

#include<stdio.h>


int main()
{
long long int n;
long long int a=0;
scanf("%I64d",&n);
a=((1+n)*n)/2;
printf("%I64d",a);
return 0;
}


#include<iostream>
using namespace std;


int main(void)
{
long long int n;
long long int a=0;
cin>>n;
a=((1+n)*n)/2;
cout<<a;
return 0;
}







#include <iostream>
 
using namespace std;
 
int main()
{
    int a, b;
    cin >> a >> b;
    cout << a + b;
    return 0;
}
