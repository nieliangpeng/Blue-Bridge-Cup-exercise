问题描述
给出一个包含n个整数的数列，问整数a在数列中的第一次出现是第几个。

输入格式
第一行包含一个整数n。

第二行包含n个非负整数，为给定的数列，数列中的每个数都不大于10000。

第三行包含一个整数a，为待查找的数。

输出格式
如果a在数列中出现了，输出它第一次出现的位置(位置从1开始编号)，否则输出-1。
样例输入
6
1 9 4 8 3 9
9
样例输出
2
数据规模与约定
1 <= n <= 1000。

#include<iostream>
#include<string.h>
#include<time.h> 
using namespace std;
int main()
{
 int *f;
 int n,i,number,w=-1;
 cin>>n;
 f=new int[n];
 for(i=0;i<n;i++){
 	cin>>f[i];
 }
 cin>>number;
 for(i=0;i<n;i++){
 	if(f[i]==number){
 		w=i+1;
 	    cout<<w;
 	    break;
 	}
 	   
 }
 if(w==-1){
 	cout<<w;
 }
delete []f;
 return 0;
}


问题描述
利用字母可以组成一些美丽的图形，下面给出了一个例子：

ABCDEFG

BABCDEF

CBABCDE

DCBABCD

EDCBABC

这是一个5行7列的图形，请找出这个图形的规律，并输出一个n行m列的图形。

输入格式
输入一行，包含两个整数n和m，分别表示你要输出的图形的行数的列数。
输出格式
输出n行，每个m个字符，为你的图形。
样例输入
5 7
样例输出
ABCDEFG
BABCDEF
CBABCDE
DCBABCD
EDCBABC
数据规模与约定
1 <= n, m <= 26。


#include<iostream>
#include<string.h>
#include<time.h> 
using namespace std;
int main()
{
 int n,m,i,j,k;
 char f[30][30];
 cin>>n>>m;
 
 for(i=1;i<=n;i++){
 	for(j=1;j<=m;j++){
 		k=j-i;
 		if(k<0){
 			k=-k;
 		}
 		f[i][j]='A'+k;
 	}
 }
for(i=1;i<=n;i++){
 	for(j=1;j<=m;j++){
 	
 		cout<<f[i][j];
 	}
 	cout<<endl;
 }
 return 0;
}




对于长度为5位的一个01串，每一位都可能是0或1，一共有32种可能。它们的前几个是：

00000

00001

00010

00011

00100

请按从小到大的顺序输出这32种01串。

输入格式
本试题没有输入。
输出格式
输出32行，按从小到大的顺序每行一个长度为5的01串。
样例输出
00000
00001
00010
00011
<以下部分省略>




#include<iostream>
#include<string.h>
#include<time.h> 
using namespace std;
int main()
{
 int i,j,k,m,n;
 for(i=0;i<=1;i++){
 	for(j=0;j<=1;j++){
 		for(k=0;k<=1;k++){
 			for(m=0;m<=1;m++){
 				for(n=0;n<=1;n++){
 					cout<<i<<j<<k<<m<<n<<endl;
 				}
 			}
 		}
 	}
 }
 return 0;
}


#include<iostream>
#include<string.h>
#include<time.h> 
using namespace std;
int main()
{
 int year;
 cin>>year;
 if((year%4==0&&year%100!=0)||(year%400==0)){
 	cout<<"yes";
 }
 else{
 	cout<<"no";
 }
 return 0;
}
