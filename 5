StringInGrid函数会在一个指定大小的格子中打印指定的字符串。
要求字符串在水平、垂直两个方向上都居中。
如果字符串太长，就截断。
如果不能恰好居中，可以稍稍偏左或者偏上一点。

下面的程序实现这个逻辑，请填写划线部分缺少的代码。

#include <stdio.h>
#include <string.h>
void StringInGrid(int width, int height, const char* s)
{
int i,k;
char buf[1000];
strcpy(buf, s);
if(strlen(s)>width-2) buf[width-2]=0;

printf("+");
for(i=0;i<width-2;i++) printf("-");
printf("+\n");

for(k=1; k<(height-1)/2;k++){
printf("|");
for(i=0;i<width-2;i++) printf(" ");
printf("|\n");
}

printf("|");

printf("%*s%s%*s",_____________________________________________);  //填空
         
printf("|\n");

for(k=(height-1)/2+1; k<height-1; k++){
printf("|");
for(i=0;i<width-2;i++) printf(" ");
printf("|\n");
} 

printf("+");
for(i=0;i<width-2;i++) printf("-");
printf("+\n");
}


int main()
{
StringInGrid(20,6,"abcd1234");
return 0;
}

对于题目中数据，应该输出：
+------------------+
|                  |
|     abcd1234     |
|                  |
|                  |
+------------------+




(width-strlen(s)-2)/2,"",buf,(width-strlen(s)-2)/2,""

这道题主要是考察的printf()函数的用法，比较冷门的。 printf("%*s",5,' ')  表示输出5个空格



三羊献瑞
#include<iostream>
#include<string.h>
#include<time.h> 
#include<stdio.h>
using namespace std;

int main(void)
{
 int a,b,c,d,e,f,g;
 for(a=1;a<=9;a++){
 	for(b=0;b<=9;b++){
 		for(c=0;c<=9;c++){
 			for(d=0;d<=9;d++){
 				for(e=0;e<=9;e++){
 					for(f=0;f<=9;f++){
 						for(g=0;g<=9;g++){
 							if(a*1000+b*100+c*10+d+1000+f*100+e*10+b==10000+f*1000+c*100+b*10+g){
 								if(a==b) continue;
 								if(a==c) continue;
 								if(a==d) continue;
 								if(a==e) continue;
 								if(a==f) continue;
 								if(a==g) continue;
 								if(b==c) continue;
 								if(b==d) continue;
 								if(e==b) continue;
 								if(f==b) continue;
 								if(g==b) continue;
 								if(c==d) continue;
 								if(c==e) continue;
 								if(c==f) continue;
 								if(c==g) continue;
 								if(d==e) continue;
 								if(f==d) continue;
 								if(g==d) continue;
 								if(e==f) continue;
 								if(e==g) continue;
 								if(f==g) continue;
 								cout<<a<<" "<<b<<" "<<c<<" "<<d<<" "<<e<<" "<<f<<" "<<g;
								return 0;
 							}
 						}
 					}
 				}
 			}
 		}
 	}
 } 
 
}





#include <stdio.h>  
  
void test(int x[])  
{  
int a = x[0]*1000 + x[1]*100 + x[2]*10 + x[3];  
int b = x[4]*10000 + x[5]*1000 + x[6]*100 + x[7]*10 + x[8];  
  
if(a*3==b) printf("%d / %d\n", a, b);  
}  
  
  
void f(int x[], int k)  
{  
int i,t;  
if(k>=9){  
test(x);  
return;  
}  
  
for(i=k; i<9; i++){  
{t=x[k]; x[k]=x[i]; x[i]=t;}  
f(x,k+1);  
{t=x[k]; x[k]=x[i]; x[i]=t;}   // 填空处  
}  
}  
  
int main()  
{  
int x[] = {1,2,3,4,5,6,7,8,9};  
f(x,0);   
return 0;  
} 
